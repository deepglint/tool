syntax = "proto3";

package dg.model;

import "searchcommon.proto";

enum IdType {
	Id_Type_Unknown = 0;
	Id_Type_IdNo = 1;
	Id_Type_Passport = 2;
	Id_Type_Officer = 3;
	Id_Type_Sergeant = 4;
	Id_Type_Temporary = 5;
}

message CivilAttr {
  	string Name = 1;
  	IdType IdType = 2;
  	string IdNo = 3; // 身份证号
	int32 GenderId = 4;
  	float GenderConfidence = 5;
  	int32 AgeId = 6;
  	float AgeConfidence = 7;
  	int32 NationId = 8;
  	float NationConfidence = 9;
  	int32 GlassId = 10;
  	float GlassConfidence = 11;
  	string Addr = 12;
  	string Birthday = 13;
	string Comment = 14;

  	TaskStatus Status = 98;
  	string AttrId = 99; // only used by registered face
}

message ImageResult {
	string ImageUri = 1;
  	string ThumbnailImageUri = 2; // only used by captured face
  	string CutboardImageUri = 3; // only used by captured face
  	int32 CutboardX = 4;
  	int32 CutboardY = 5;
  	int32 CutboardWidth = 6;
  	int32 CutboardHeight = 7;
  	int32 CutboardResWidth = 8;
  	int32 CutboardResHeight = 9;

  	string BinData = 16;
  	string Feature = 17;
  	int32 IsRanked = 18; // only used by registered civil

  	TaskStatus Status = 98;
  	string ImageId = 99; // only used by registered civil
}

message CapturedFace {
	string FaceId = 1;
	string FaceReId = 2;
	int64 Timestamp = 3;
	string SensorId = 4; // FK
	string SensorName = 5;
  	float Confidence = 6;
  	int32 IsWarned = 7; // should join with face_event table

	CivilAttr CivilAttr = 8;
  	ImageResult ImageResult = 9; // one captured face correspond to one image

  	TaskStatus Status = 99;
}

message CapturedFaceResult {
	int32 AllSize = 1;
	int32 ReturnedSize = 2;
	repeated CapturedFace CapturedFaces = 3;
}

message FaceRepo {
	string RepoId = 1;
	string RepoName = 2;
	int64 Timestamp = 3;
	string Comment = 4;
	int32 PicCount = 5;
	int32 NameListAttr = 6;

	TaskStatus Status = 99;
}

message FaceRepoResult {
	int32 AllSize = 1;
	int32 ReturnedSize = 2;
	repeated FaceRepo FaceRepos = 3;
}

message RegisteredFace {
	string CivilId = 1;
	int64 Timestamp = 2;
	string FaceRepoId = 3; // FK
	string FaceRepoName = 4;
	float Confidence = 5;
	int32 NameListAttr = 6;

	CivilAttr CivilAttr = 8;
  	repeated ImageResult ImageResults = 9; // one registered civil correspond to multi images 

	TaskStatus Status = 99;
}

message RegisteredFaceResult {
	int32 AllSize = 1;
	int32 ReturnedSize = 2;
	repeated RegisteredFace RegisteredFaces = 3;
}

message WarnedFace {
	string EventId = 1; // PK
	string EventReId = 2;
	int64 Timestamp = 3;

	string SensorId = 4; // FK
	string SensorName = 5;

	string FaceRepoId = 8; // FK
	string FaceRepoName = 9;
	int32 NameListAttr = 10;

	string FaceId = 16; // FK
	string FaceReId = 17;
	ImageResult CapturedImage = 18;

	string CivilId = 32; // FK
	CivilAttr CivilAttr = 33; // regitered civil
  	ImageResult RegisteredImage = 34;

	string RuleId = 64; // FK
	string Rule = 65;

	float Confidence = 80;
	int32 IsChecked = 81;
  	string Comment = 82;
  	string UserIds = 83;

  	TaskStatus Status = 99;
}

message WarnedFaceResult {
	int32 AllSize = 1;
	int32 ReturnedSize = 2;
	repeated WarnedFace WarnedFaces = 3;
	string ReId = 4;
	int32 IsInform = 5;
	string FaceId = 6;
}
