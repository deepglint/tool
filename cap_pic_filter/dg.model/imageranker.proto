syntax = "proto3";

package dg.model;

import "common.proto";

//////////////// SERVICES //////////////////////
service ImageRankerService {
    rpc Index(ImageRankerIndexRequest) returns (ImageRankerIndexResponse) {}
    rpc BatchIndex(ImageRankerIndexBatchRequest) returns (ImageRankerIndexBatchResponse) {}
    rpc Query(ImageRankerQueryRequest) returns (ImageRankerQueryResponse) {}
    rpc BatchQuery(ImageRankerQueryBatchRequest) returns (ImageRankerQueryBatchResponse) {}
}

//////////////// COMMON ///////////////////////
/*
message Image {
    string Id = 1;
    int32 Width = 2;
    int32 Height = 3;
    string URI = 4;
    string BinData = 5; // base64 format image
}

message Cutboard {
    uint32 X = 1;
    uint32 Y = 2;
    uint32 Width = 3;
    uint32 Height = 4;
    uint32 ResWidth = 5;
    uint32 ResHeight = 6;
}

enum ObjType {
    OBJ_TYPE_UNKNOWN = 0;
    OBJ_TYPE_CAR = 1;
    OBJ_TYPE_BICYCLE = 2;
    OBJ_TYPE_TRICYCLE = 3;
    OBJ_TYPE_PEDESTRIAN = 4;
    OBJ_TYPE_FACE = 1024;
    OBJ_TYPE_VEHICLE_VECTOR = 2048;
    OBJ_TYPE_BICYCLE_VECTOR = 2049;
    OBJ_TYPE_TRICYCLE_VECTOR = 2050;
    OBJ_TYPE_PEDESTRIAN_VECTOR = 2051;
    OBJ_TYPE_FACE_VECTOR = 3072;
    OBJ_TYPE_VEHICLE_CUTBOARD = 4096;
    OBJ_TYPE_BICYCLE_CUTBOARD = 4097;
    OBJ_TYPE_TRICYCLE_CUTBOARD = 4098;
    OBJ_TYPE_PEDESTRIAN_CUTBOARD = 4099;
    OBJ_TYPE_FACE_CUTBOARD = 5120;
}
*/

message CutboardObject {
    int64 ObjectId = 1;
    ObjType Type = 2;
    Cutboard Rect = 3;
}

//////////////// INDEX ///////////////////////
message ImageRankerIndexData {
    Image Image = 1;
    repeated CutboardObject Objects = 2;
}

message ImageRankerIndexResult {
    repeated int64 IndexedObjects = 1;
}

message ImageRankerIndexRequest {
    ImageRankerIndexData Data = 1;
}

message ImageRankerIndexResponse {
    ImageRankerIndexResult Result = 1;
}

message ImageRankerIndexBatchRequest {
    repeated ImageRankerIndexData DataList = 1;
}

message ImageRankerIndexBatchResponse {
    repeated ImageRankerIndexResult Results = 1;
}

//////////////// QUERY ///////////////////////
message ImageRankerQueryData {
    ObjType Type = 1;
    Image Image = 2;
    Cutboard CropArea = 3; //set if part of image is vehicle
    repeated Cutboard FocusAreas = 4;
    int32 Limit = 5;
}

message ImageRankerQueryResult {
    int64 AllMatchCount = 1;
    repeated int64 DataIds = 2;
    repeated float Scores = 3;
}

message ImageRankerQueryRequest {
    ImageRankerQueryData Data = 1;
}

message ImageRankerQueryResponse {
    ImageRankerQueryResult Result = 1;
}

message ImageRankerQueryBatchRequest {
    repeated ImageRankerQueryData DataList = 1;
}

message ImageRankerQueryBatchResponse {
    repeated ImageRankerQueryResult Results = 2;
}
