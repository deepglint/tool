// Code generated by protoc-gen-go.
// source: alarm.proto
// DO NOT EDIT!

/*
Package dg_model is a generated protocol buffer package.

It is generated from these files:
	alarm.proto
	common.proto
	deepdata.proto
	evidence.proto
	face.proto
	faceranker.proto
	facerule.proto
	facesearch.proto
	imageranker.proto
	importer.proto
	invalidvehicle.proto
	matrix.proto
	preview.proto
	searchbicycle.proto
	searchcommon.proto
	searchpedestrian.proto
	searchspacial.proto
	searchtricycle.proto
	searchvehicle.proto
	sensor.proto
	witness.proto

It has these top-level messages:
	AlarmContent
	AlarmRule
	AlarmEventSummary
	AlarmEvent
	AlarmEventRequest
	AlarmEventResponse
	SrcMetadata
	Cutboard
	CutboardImage
	Color
	FeatureVector
	NullMessage
	Image
	RecFacePose
	RecFace
	NameAndConfidence
	CategoryAndFeature
	PeopleAttr
	RecVehicle
	RecNonMotorVehicle
	Passenger
	RecPedestrian
	VehicleModelType
	LicensePlate
	VehicleSymbol
	Symbol
	StorageConfig
	VehicleObj
	PedestrianObj
	GenericObj
	MetaEvidence
	EvidenceImage
	CivilAttr
	ImageResult
	CapturedFace
	CapturedFaceResult
	FaceRepo
	FaceRepoResult
	RegisteredFace
	RegisteredFaceResult
	WarnedFace
	WarnedFaceResult
	RankRepoSizeRequest
	RankRepoSizeResponse
	RankRequestContext
	RankResponseContext
	RankFeatureRequest
	RankItem
	SearchRequest
	SearchResponse
	RankFeatureResponse
	RankImageRequest
	RankImageResponse
	GetImageContentRequest
	GetImageContentResponse
	FeatureRankingRequest
	FeatureRankingResponse
	InfoAndFeature
	AddFeaturesRequest
	AddFeaturesResponse
	FaceRule
	Point
	Roi
	SensorInRule
	RepoInRule
	TimeInRule
	FaceRuleSummary
	FaceRuleResult
	FaceEvent
	TimeSpacialRangeConds
	BaseConds
	CapturedConds
	RegisteredConds
	WarnedConds
	AuxiliaryConds
	ImageConds
	CapturedFaceQuery
	RegisteredFaceQuery
	FaceRuleQuery
	FaceEventQuery
	CutboardObject
	ImageRankerIndexData
	ImageRankerIndexResult
	ImageRankerIndexRequest
	ImageRankerIndexResponse
	ImageRankerIndexBatchRequest
	ImageRankerIndexBatchResponse
	ImageRankerQueryData
	ImageRankerQueryResult
	ImageRankerQueryRequest
	ImageRankerQueryResponse
	ImageRankerQueryBatchRequest
	ImageRankerQueryBatchResponse
	DataSourceAttr
	ImportDataSource
	InputObj
	OutputEndpoint
	OutputObj
	CGSVehicle
	InvalidVehicle
	InvalidVehicleResult
	Time
	MatrixError
	NanomsgCmd
	NanomsgData
	PreviewCmd
	PreviewData
	PreviewImage
	BicycleQuery
	QueryTimeRange
	QueryTimeSpacialRange
	BaseQuery
	DimensionalCountRequest
	DimensionalCountResponse
	ObjCount
	PedestrianQuery
	PedestrianCategory
	PedestrianResult
	RetPedestrian
	PedestrianAuxiliaryInfo
	GroupPedestrianResult
	GroupRetPedestrian
	RepoInfo
	SensorInfo
	DayStatistics
	DayStatisticsResult
	TricycleQuery
	VehicleBrandModel
	VehicleQuery
	VehicleFuzzyQuery
	VehicleTimeSpacial
	VehicleAuxiliaryInfo
	RetVehicle
	VehicleResult
	GroupVehicleAuxiliaryInfo
	GroupVehicle
	GroupVehicleResult
	VehicleStatistics
	VehicleStatisticsResult
	SensorRepo
	Sensor
	SubRepoAndSensor
	SensorRepoResult
	SensorResult
	RepoSensorId
	RepoSensorName
	IndexRequest
	IndexTxtRequest
	IndexTxtResponse
	CommonIndex
	BrandIndex
	IndexResponse
	WitnessRequest
	WitnessBatchRequest
	WitnessResponse
	WitnessBatchResponse
	WitnessRelativeROI
	WitnessMarginROI
	WitnessRequestContext
	WitnessImage
	WitnessResponseContext
	WitnessResult
*/
package dg_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RuleType int32

const (
	RuleType_RuleUnknown     RuleType = 0
	RuleType_VehicleInvolved RuleType = 1
	RuleType_VehicleInvalid  RuleType = 2
)

var RuleType_name = map[int32]string{
	0: "RuleUnknown",
	1: "VehicleInvolved",
	2: "VehicleInvalid",
}
var RuleType_value = map[string]int32{
	"RuleUnknown":     0,
	"VehicleInvolved": 1,
	"VehicleInvalid":  2,
}

func (x RuleType) String() string {
	return proto.EnumName(RuleType_name, int32(x))
}
func (RuleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CaseType int32

const (
	CaseType_CaseUnknown CaseType = 0
	CaseType_PlateAlarm  CaseType = 1
	CaseType_BrandAlarm  CaseType = 2
	CaseType_TypeAlarm   CaseType = 3
)

var CaseType_name = map[int32]string{
	0: "CaseUnknown",
	1: "PlateAlarm",
	2: "BrandAlarm",
	3: "TypeAlarm",
}
var CaseType_value = map[string]int32{
	"CaseUnknown": 0,
	"PlateAlarm":  1,
	"BrandAlarm":  2,
	"TypeAlarm":   3,
}

func (x CaseType) String() string {
	return proto.EnumName(CaseType_name, int32(x))
}
func (CaseType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AlarmContent struct {
	QueryTimeSpacialRange *QueryTimeSpacialRange `protobuf:"bytes,1,opt,name=QueryTimeSpacialRange,json=queryTimeSpacialRange" json:"QueryTimeSpacialRange"`
	TypeId                int32                  `protobuf:"varint,3,opt,name=TypeId,json=typeId" json:"TypeId"`
	BrandId               int32                  `protobuf:"varint,4,opt,name=BrandId,json=brandId" json:"BrandId"`
	SubBrandId            int32                  `protobuf:"varint,5,opt,name=SubBrandId,json=subBrandId" json:"SubBrandId"`
	ModelYearId           int32                  `protobuf:"varint,6,opt,name=ModelYearId,json=modelYearId" json:"ModelYearId"`
	PlateText             string                 `protobuf:"bytes,7,opt,name=PlateText,json=plateText" json:"PlateText"`
}

func (m *AlarmContent) Reset()                    { *m = AlarmContent{} }
func (m *AlarmContent) String() string            { return proto.CompactTextString(m) }
func (*AlarmContent) ProtoMessage()               {}
func (*AlarmContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AlarmContent) GetQueryTimeSpacialRange() *QueryTimeSpacialRange {
	if m != nil {
		return m.QueryTimeSpacialRange
	}
	return nil
}

type AlarmRule struct {
	Id           int64         `protobuf:"varint,1,opt,name=Id,json=id" json:"Id"`
	RuleType     RuleType      `protobuf:"varint,2,opt,name=RuleType,json=ruleType,enum=dg.model.RuleType" json:"RuleType"`
	CaseType     CaseType      `protobuf:"varint,3,opt,name=CaseType,json=caseType,enum=dg.model.CaseType" json:"CaseType"`
	DeadTime     int64         `protobuf:"varint,4,opt,name=DeadTime,json=deadTime" json:"DeadTime"`
	AlarmContent *AlarmContent `protobuf:"bytes,5,opt,name=AlarmContent,json=alarmContent" json:"AlarmContent"`
	Status       TaskStatus    `protobuf:"varint,6,opt,name=Status,json=status,enum=dg.model.TaskStatus" json:"Status"`
}

func (m *AlarmRule) Reset()                    { *m = AlarmRule{} }
func (m *AlarmRule) String() string            { return proto.CompactTextString(m) }
func (*AlarmRule) ProtoMessage()               {}
func (*AlarmRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AlarmRule) GetAlarmContent() *AlarmContent {
	if m != nil {
		return m.AlarmContent
	}
	return nil
}

type AlarmEventSummary struct {
	Id        int64    `protobuf:"varint,1,opt,name=Id,json=id" json:"Id"`
	Ts        int64    `protobuf:"varint,2,opt,name=Ts,json=ts" json:"Ts"`
	RuleType  RuleType `protobuf:"varint,3,opt,name=RuleType,json=ruleType,enum=dg.model.RuleType" json:"RuleType"`
	CaseType  CaseType `protobuf:"varint,4,opt,name=CaseType,json=caseType,enum=dg.model.CaseType" json:"CaseType"`
	RepoId    int32    `protobuf:"varint,5,opt,name=RepoId,json=repoId" json:"RepoId"`
	SensorId  int32    `protobuf:"varint,6,opt,name=SensorId,json=sensorId" json:"SensorId"`
	PlateText string   `protobuf:"bytes,7,opt,name=PlateText,json=plateText" json:"PlateText"`
	RuleId    int64    `protobuf:"varint,8,opt,name=RuleId,json=ruleId" json:"RuleId"`
	VehicleId int64    `protobuf:"varint,9,opt,name=VehicleId,json=vehicleId" json:"VehicleId"`
}

func (m *AlarmEventSummary) Reset()                    { *m = AlarmEventSummary{} }
func (m *AlarmEventSummary) String() string            { return proto.CompactTextString(m) }
func (*AlarmEventSummary) ProtoMessage()               {}
func (*AlarmEventSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type AlarmEvent struct {
	BingoVehicleObj *RetVehicle `protobuf:"bytes,1,opt,name=BingoVehicleObj,json=bingoVehicleObj" json:"BingoVehicleObj"`
	BingoAlarmRule  *AlarmRule  `protobuf:"bytes,2,opt,name=BingoAlarmRule,json=bingoAlarmRule" json:"BingoAlarmRule"`
}

func (m *AlarmEvent) Reset()                    { *m = AlarmEvent{} }
func (m *AlarmEvent) String() string            { return proto.CompactTextString(m) }
func (*AlarmEvent) ProtoMessage()               {}
func (*AlarmEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AlarmEvent) GetBingoVehicleObj() *RetVehicle {
	if m != nil {
		return m.BingoVehicleObj
	}
	return nil
}

func (m *AlarmEvent) GetBingoAlarmRule() *AlarmRule {
	if m != nil {
		return m.BingoAlarmRule
	}
	return nil
}

type AlarmEventRequest struct {
	QueryTimeSpacialRange *QueryTimeSpacialRange `protobuf:"bytes,1,opt,name=QueryTimeSpacialRange,json=queryTimeSpacialRange" json:"QueryTimeSpacialRange"`
	RuleType              RuleType               `protobuf:"varint,2,opt,name=RuleType,json=ruleType,enum=dg.model.RuleType" json:"RuleType"`
	CaseType              CaseType               `protobuf:"varint,3,opt,name=CaseType,json=caseType,enum=dg.model.CaseType" json:"CaseType"`
	Offset                int32                  `protobuf:"varint,4,opt,name=Offset,json=offset" json:"Offset"`
	Limit                 int32                  `protobuf:"varint,5,opt,name=Limit,json=limit" json:"Limit"`
	SortBy                string                 `protobuf:"bytes,6,opt,name=SortBy,json=sortBy" json:"SortBy"`
	SortOrderAsc          bool                   `protobuf:"varint,7,opt,name=SortOrderAsc,json=sortOrderAsc" json:"SortOrderAsc"`
	QueryId               string                 `protobuf:"bytes,8,opt,name=QueryId,json=queryId" json:"QueryId"`
}

func (m *AlarmEventRequest) Reset()                    { *m = AlarmEventRequest{} }
func (m *AlarmEventRequest) String() string            { return proto.CompactTextString(m) }
func (*AlarmEventRequest) ProtoMessage()               {}
func (*AlarmEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AlarmEventRequest) GetQueryTimeSpacialRange() *QueryTimeSpacialRange {
	if m != nil {
		return m.QueryTimeSpacialRange
	}
	return nil
}

type AlarmEventResponse struct {
	AllSize            int32                `protobuf:"varint,1,opt,name=AllSize,json=allSize" json:"AllSize"`
	ReturnedSize       int32                `protobuf:"varint,2,opt,name=ReturnedSize,json=returnedSize" json:"ReturnedSize"`
	AlarmEventSummarys []*AlarmEventSummary `protobuf:"bytes,3,rep,name=AlarmEventSummarys,json=alarmEventSummarys" json:"AlarmEventSummarys"`
}

func (m *AlarmEventResponse) Reset()                    { *m = AlarmEventResponse{} }
func (m *AlarmEventResponse) String() string            { return proto.CompactTextString(m) }
func (*AlarmEventResponse) ProtoMessage()               {}
func (*AlarmEventResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AlarmEventResponse) GetAlarmEventSummarys() []*AlarmEventSummary {
	if m != nil {
		return m.AlarmEventSummarys
	}
	return nil
}

func init() {
	proto.RegisterType((*AlarmContent)(nil), "dg.model.AlarmContent")
	proto.RegisterType((*AlarmRule)(nil), "dg.model.AlarmRule")
	proto.RegisterType((*AlarmEventSummary)(nil), "dg.model.AlarmEventSummary")
	proto.RegisterType((*AlarmEvent)(nil), "dg.model.AlarmEvent")
	proto.RegisterType((*AlarmEventRequest)(nil), "dg.model.AlarmEventRequest")
	proto.RegisterType((*AlarmEventResponse)(nil), "dg.model.AlarmEventResponse")
	proto.RegisterEnum("dg.model.RuleType", RuleType_name, RuleType_value)
	proto.RegisterEnum("dg.model.CaseType", CaseType_name, CaseType_value)
}

func init() { proto.RegisterFile("alarm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0x4d, 0x6f, 0xd3, 0x4a,
	0x14, 0x7d, 0x71, 0x1a, 0xc7, 0xbe, 0xce, 0x73, 0xfa, 0xa6, 0x1f, 0x8a, 0xfa, 0x9e, 0x1e, 0x95,
	0x57, 0xa8, 0x42, 0x59, 0x84, 0x1d, 0x48, 0x48, 0xfd, 0x60, 0xc1, 0x97, 0x0a, 0xe3, 0x14, 0x89,
	0xe5, 0x24, 0x9e, 0xb6, 0xa6, 0xb6, 0x27, 0x9d, 0x71, 0x02, 0x61, 0xc7, 0x92, 0xdf, 0xc0, 0x82,
	0x7f, 0xc4, 0xdf, 0x61, 0xcb, 0xcc, 0xb5, 0x5d, 0x3b, 0x6d, 0x85, 0x60, 0xd1, 0x55, 0xe7, 0xdc,
	0x73, 0xef, 0xcd, 0xdc, 0x73, 0xe6, 0xba, 0xe0, 0xb1, 0x84, 0xc9, 0x74, 0x38, 0x93, 0x22, 0x17,
	0xc4, 0x89, 0xce, 0x86, 0xa9, 0x88, 0x78, 0xb2, 0x43, 0x14, 0x67, 0x72, 0x7a, 0x3e, 0x15, 0x69,
	0x2a, 0xb2, 0x82, 0xdd, 0xd9, 0x28, 0x62, 0x0b, 0x7e, 0x1e, 0x4f, 0x13, 0x5e, 0x04, 0x83, 0x1f,
	0x2d, 0xe8, 0xed, 0x9b, 0x16, 0x87, 0x22, 0xcb, 0x79, 0x96, 0x93, 0x13, 0xd8, 0x7a, 0x33, 0xe7,
	0x72, 0x39, 0x8e, 0x53, 0x1e, 0xce, 0xd8, 0x34, 0x66, 0x09, 0x65, 0xd9, 0x19, 0x1f, 0xb4, 0x76,
	0x5b, 0xf7, 0xbd, 0xd1, 0xbd, 0x61, 0xf5, 0x1b, 0xc3, 0x5b, 0xd3, 0xe8, 0xd6, 0xe5, 0x6d, 0x61,
	0xb2, 0x0d, 0xf6, 0x78, 0x39, 0xe3, 0xcf, 0xa2, 0x41, 0x5b, 0xf7, 0xe9, 0x50, 0x3b, 0x47, 0x44,
	0x06, 0xd0, 0x3d, 0x90, 0x2c, 0x8b, 0x34, 0xb1, 0x86, 0x44, 0x77, 0x52, 0x40, 0xf2, 0x3f, 0x40,
	0x38, 0x9f, 0x54, 0x64, 0x07, 0x49, 0x50, 0x57, 0x11, 0xb2, 0x0b, 0xde, 0x2b, 0x73, 0x8f, 0x77,
	0x7a, 0x2a, 0x9d, 0x60, 0x63, 0x82, 0x97, 0xd6, 0x21, 0xf2, 0x1f, 0xb8, 0xaf, 0x13, 0x96, 0xf3,
	0x31, 0xff, 0x98, 0x0f, 0xba, 0x9a, 0x77, 0xa9, 0x3b, 0xab, 0x02, 0xc1, 0x67, 0x0b, 0x5c, 0x9c,
	0x9c, 0xce, 0x13, 0x4e, 0x7c, 0xb0, 0x74, 0x13, 0x33, 0x63, 0x9b, 0x5a, 0x71, 0x44, 0x86, 0xe0,
	0x98, 0xb8, 0xb9, 0xf3, 0xc0, 0xd2, 0x51, 0x7f, 0x44, 0xea, 0xc9, 0x2b, 0x86, 0x3a, 0xb2, 0x3c,
	0x99, 0xfc, 0x43, 0xa6, 0x8a, 0xfc, 0xf6, 0xf5, 0xfc, 0x8a, 0xa1, 0xce, 0xb4, 0x3c, 0x91, 0x1d,
	0x70, 0x8e, 0x38, 0x8b, 0x8c, 0x4e, 0x38, 0x78, 0x9b, 0x3a, 0x51, 0x89, 0xc9, 0xa3, 0x55, 0x4b,
	0x70, 0x76, 0x6f, 0xb4, 0x5d, 0xf7, 0x6b, 0xb2, 0xb4, 0xc7, 0x9a, 0xf6, 0x3d, 0x00, 0x3b, 0xcc,
	0x59, 0x3e, 0x57, 0x28, 0x88, 0x3f, 0xda, 0xac, 0xab, 0xc6, 0x4c, 0x5d, 0x14, 0x1c, 0xb5, 0x15,
	0xfe, 0x0d, 0xbe, 0x5a, 0xf0, 0x0f, 0x36, 0x7b, 0xba, 0xd0, 0xc5, 0xe1, 0x3c, 0x4d, 0x99, 0x5c,
	0xde, 0xd0, 0x42, 0xe3, 0xb1, 0x42, 0x15, 0x34, 0xce, 0xd5, 0x8a, 0x36, 0xed, 0x3f, 0xd4, 0x66,
	0xed, 0x37, 0xb4, 0xd1, 0x6f, 0x85, 0xf2, 0x99, 0xb8, 0x72, 0xdd, 0x96, 0x88, 0x8c, 0x66, 0x21,
	0xcf, 0x94, 0xa8, 0xed, 0x76, 0x54, 0x89, 0x7f, 0xed, 0x35, 0x76, 0xd4, 0xb7, 0xd1, 0x75, 0x0e,
	0x4e, 0x61, 0x4b, 0x44, 0xa6, 0xea, 0x6d, 0xb1, 0x0e, 0x9a, 0x72, 0x91, 0x72, 0x17, 0x55, 0x20,
	0xf8, 0xd2, 0x02, 0xa8, 0xd5, 0x21, 0x4f, 0xa0, 0x7f, 0x10, 0x67, 0x67, 0xa2, 0xac, 0x38, 0x9e,
	0xbc, 0x2f, 0x77, 0xa2, 0xa1, 0x31, 0xe5, 0x79, 0x49, 0xd3, 0xfe, 0x64, 0x35, 0x99, 0x3c, 0x06,
	0x1f, 0xeb, 0xaf, 0x1e, 0x1d, 0x4a, 0xea, 0x8d, 0x36, 0xae, 0x19, 0x6b, 0x28, 0xea, 0x4f, 0x56,
	0x52, 0x83, 0xef, 0x2b, 0x4e, 0x51, 0xae, 0xb7, 0x4c, 0xdd, 0xd9, 0xb2, 0xde, 0xf5, 0xe3, 0xd7,
	0x76, 0x1c, 0x9f, 0x9e, 0x2a, 0x9e, 0x97, 0x3b, 0x6f, 0x0b, 0x44, 0x64, 0x13, 0x3a, 0x2f, 0xe3,
	0x34, 0xce, 0x4b, 0xdf, 0x3b, 0x89, 0x01, 0x26, 0x3b, 0x14, 0x32, 0x3f, 0x58, 0xa2, 0xe9, 0xae,
	0x7e, 0xbc, 0x88, 0x48, 0x00, 0x3d, 0x13, 0x3f, 0x96, 0x11, 0x97, 0xfb, 0x6a, 0x8a, 0xae, 0x3b,
	0xb4, 0xa7, 0x1a, 0x31, 0xf3, 0x79, 0xc1, 0xc9, 0x4b, 0xe7, 0x5d, 0xda, 0xbd, 0x2c, 0x60, 0xf0,
	0xad, 0x05, 0xa4, 0x29, 0xa8, 0x9a, 0x89, 0x4c, 0x71, 0x53, 0xb0, 0x9f, 0x24, 0x61, 0xfc, 0xa9,
	0xd0, 0x50, 0x7f, 0x8f, 0x58, 0x01, 0xcd, 0xcf, 0x69, 0x77, 0xe7, 0x32, 0xe3, 0x11, 0xd2, 0x16,
	0xd2, 0x3d, 0xd9, 0x88, 0x91, 0x17, 0xcd, 0x9e, 0xe5, 0x3a, 0x29, 0x2d, 0x49, 0x5b, 0x9b, 0xf1,
	0xef, 0x35, 0x9b, 0x9b, 0x39, 0x94, 0xb0, 0x1b, 0x65, 0x7b, 0x47, 0xb5, 0x0b, 0xa4, 0x0f, 0x9e,
	0x39, 0x9f, 0x64, 0x17, 0x99, 0xf8, 0x90, 0xad, 0xff, 0x45, 0x36, 0xa0, 0x5f, 0xbd, 0xdc, 0x6c,
	0x21, 0x92, 0x05, 0x8f, 0xd6, 0x5b, 0x84, 0x80, 0x5f, 0x07, 0x59, 0x12, 0x47, 0xeb, 0xd6, 0xde,
	0xf3, 0xda, 0x1b, 0xd3, 0xc5, 0x9c, 0xeb, 0x2e, 0x3e, 0x00, 0x6e, 0x0d, 0x5e, 0x48, 0x37, 0xd0,
	0x18, 0x3f, 0xaf, 0x05, 0xb6, 0xc8, 0xdf, 0xe0, 0x9a, 0xc2, 0x02, 0xb6, 0x27, 0x36, 0xfe, 0xcf,
	0x78, 0xf8, 0x33, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x3c, 0x90, 0x15, 0x75, 0x06, 0x00, 0x00,
}
