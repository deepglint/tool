// Code generated by protoc-gen-go.
// source: localcommon.proto
// DO NOT EDIT!

package dg_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RecognizeType int32

const (
	RecognizeType_REC_TYPE_INVALID RecognizeType = 0
	RecognizeType_REC_TYPE_VEHICLE RecognizeType = 1
	RecognizeType_REC_TYPE_FACE    RecognizeType = 2
	RecognizeType_REC_TYPE_ALL     RecognizeType = 3
)

var RecognizeType_name = map[int32]string{
	0: "REC_TYPE_INVALID",
	1: "REC_TYPE_VEHICLE",
	2: "REC_TYPE_FACE",
	3: "REC_TYPE_ALL",
}
var RecognizeType_value = map[string]int32{
	"REC_TYPE_INVALID": 0,
	"REC_TYPE_VEHICLE": 1,
	"REC_TYPE_FACE":    2,
	"REC_TYPE_ALL":     3,
}

func (x RecognizeType) String() string {
	return proto.EnumName(RecognizeType_name, int32(x))
}
func (RecognizeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type RankType int32

const (
	RankType_RANK_TYPE_DEFAULT RankType = 0
	RankType_RANK_TYPE_VEHICLE RankType = 1
	RankType_RANK_TYPE_FACE    RankType = 2
)

var RankType_name = map[int32]string{
	0: "RANK_TYPE_DEFAULT",
	1: "RANK_TYPE_VEHICLE",
	2: "RANK_TYPE_FACE",
}
var RankType_value = map[string]int32{
	"RANK_TYPE_DEFAULT": 0,
	"RANK_TYPE_VEHICLE": 1,
	"RANK_TYPE_FACE":    2,
}

func (x RankType) String() string {
	return proto.EnumName(RankType_name, int32(x))
}
func (RankType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type RecognizeFunctions int32

const (
	RecognizeFunctions_RECFUNC_INVALID              RecognizeFunctions = 0
	RecognizeFunctions_RECFUNC_VEHICLE_DETECT       RecognizeFunctions = 100
	RecognizeFunctions_RECFUNC_MOTOR_STYLE          RecognizeFunctions = 101
	RecognizeFunctions_RECFUNC_MOTOR_COLOR          RecognizeFunctions = 102
	RecognizeFunctions_RECFUNC_MOTOR_MARKER         RecognizeFunctions = 103
	RecognizeFunctions_RECFUNC_MOTOR_PLATE          RecognizeFunctions = 104
	RecognizeFunctions_RECFUNC_MOTOR_FEATURE        RecognizeFunctions = 105
	RecognizeFunctions_RECFUNC_MOTOR_DRIVER_BELT    RecognizeFunctions = 106
	RecognizeFunctions_RECFUNC_MOTOR_DRIVER_PHONE   RecognizeFunctions = 107
	RecognizeFunctions_RECFUNC_MOTOR_CODRIVER_BELT  RecognizeFunctions = 108
	RecognizeFunctions_RECFUNC_FACE_DETECT          RecognizeFunctions = 200
	RecognizeFunctions_RECFUNC_FACE_ALIGNMENT       RecognizeFunctions = 201
	RecognizeFunctions_RECFUNC_FACE_QUALITY_LV1     RecognizeFunctions = 202
	RecognizeFunctions_RECFUNC_FACE_QUALITY_LV2     RecognizeFunctions = 203
	RecognizeFunctions_RECFUNC_FACE_FEATURE         RecognizeFunctions = 204
	RecognizeFunctions_RECFUNC_FACE_ATTRIBUTE       RecognizeFunctions = 205
	RecognizeFunctions_RECFUNC_PEDESTRIAN_ATTRIBUTE RecognizeFunctions = 300
	RecognizeFunctions_RECFUNC_NON_MOTOR_ATTRIBUTE  RecognizeFunctions = 400
)

var RecognizeFunctions_name = map[int32]string{
	0:   "RECFUNC_INVALID",
	100: "RECFUNC_VEHICLE_DETECT",
	101: "RECFUNC_MOTOR_STYLE",
	102: "RECFUNC_MOTOR_COLOR",
	103: "RECFUNC_MOTOR_MARKER",
	104: "RECFUNC_MOTOR_PLATE",
	105: "RECFUNC_MOTOR_FEATURE",
	106: "RECFUNC_MOTOR_DRIVER_BELT",
	107: "RECFUNC_MOTOR_DRIVER_PHONE",
	108: "RECFUNC_MOTOR_CODRIVER_BELT",
	200: "RECFUNC_FACE_DETECT",
	201: "RECFUNC_FACE_ALIGNMENT",
	202: "RECFUNC_FACE_QUALITY_LV1",
	203: "RECFUNC_FACE_QUALITY_LV2",
	204: "RECFUNC_FACE_FEATURE",
	205: "RECFUNC_FACE_ATTRIBUTE",
	300: "RECFUNC_PEDESTRIAN_ATTRIBUTE",
	400: "RECFUNC_NON_MOTOR_ATTRIBUTE",
}
var RecognizeFunctions_value = map[string]int32{
	"RECFUNC_INVALID":              0,
	"RECFUNC_VEHICLE_DETECT":       100,
	"RECFUNC_MOTOR_STYLE":          101,
	"RECFUNC_MOTOR_COLOR":          102,
	"RECFUNC_MOTOR_MARKER":         103,
	"RECFUNC_MOTOR_PLATE":          104,
	"RECFUNC_MOTOR_FEATURE":        105,
	"RECFUNC_MOTOR_DRIVER_BELT":    106,
	"RECFUNC_MOTOR_DRIVER_PHONE":   107,
	"RECFUNC_MOTOR_CODRIVER_BELT":  108,
	"RECFUNC_FACE_DETECT":          200,
	"RECFUNC_FACE_ALIGNMENT":       201,
	"RECFUNC_FACE_QUALITY_LV1":     202,
	"RECFUNC_FACE_QUALITY_LV2":     203,
	"RECFUNC_FACE_FEATURE":         204,
	"RECFUNC_FACE_ATTRIBUTE":       205,
	"RECFUNC_PEDESTRIAN_ATTRIBUTE": 300,
	"RECFUNC_NON_MOTOR_ATTRIBUTE":  400,
}

func (x RecognizeFunctions) String() string {
	return proto.EnumName(RecognizeFunctions_name, int32(x))
}
func (RecognizeFunctions) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type Time struct {
	Seconds  int64 `protobuf:"varint,1,opt,name=Seconds,json=seconds" json:"Seconds,omitempty"`
	NanoSecs int64 `protobuf:"varint,2,opt,name=NanoSecs,json=nanoSecs" json:"NanoSecs,omitempty"`
}

func (m *Time) Reset()                    { *m = Time{} }
func (m *Time) String() string            { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()               {}
func (*Time) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Time) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Time) GetNanoSecs() int64 {
	if m != nil {
		return m.NanoSecs
	}
	return 0
}

type MatrixError struct {
	Code    int32  `protobuf:"varint,1,opt,name=Code,json=code" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,json=message" json:"Message,omitempty"`
}

func (m *MatrixError) Reset()                    { *m = MatrixError{} }
func (m *MatrixError) String() string            { return proto.CompactTextString(m) }
func (*MatrixError) ProtoMessage()               {}
func (*MatrixError) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *MatrixError) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MatrixError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Time)(nil), "dg.model.Time")
	proto.RegisterType((*MatrixError)(nil), "dg.model.MatrixError")
	proto.RegisterEnum("dg.model.RecognizeType", RecognizeType_name, RecognizeType_value)
	proto.RegisterEnum("dg.model.RankType", RankType_name, RankType_value)
	proto.RegisterEnum("dg.model.RecognizeFunctions", RecognizeFunctions_name, RecognizeFunctions_value)
}

func init() { proto.RegisterFile("localcommon.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 492 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x93, 0xcd, 0x6e, 0xd3, 0x4e,
	0x14, 0xc5, 0xeb, 0x24, 0xff, 0x7f, 0xc2, 0x85, 0xc2, 0xe4, 0xb6, 0x05, 0x27, 0xa5, 0x50, 0xba,
	0x42, 0x59, 0x54, 0x02, 0x96, 0xb0, 0x99, 0x3a, 0x37, 0xd4, 0xea, 0xc4, 0x0e, 0x93, 0x49, 0xa4,
	0xac, 0x4c, 0xb0, 0x87, 0x10, 0x9a, 0x78, 0xaa, 0x38, 0x48, 0xc0, 0x53, 0xb0, 0xe3, 0x25, 0x78,
	0x10, 0x3e, 0xdf, 0x09, 0xe1, 0x7c, 0x38, 0xa6, 0x15, 0xcb, 0x7b, 0x7e, 0x73, 0x8f, 0xcf, 0xb9,
	0x92, 0xa1, 0x3a, 0x31, 0xe1, 0x70, 0x12, 0x9a, 0xe9, 0xd4, 0xc4, 0xc7, 0x17, 0x33, 0x33, 0x37,
	0x58, 0x89, 0x46, 0xc7, 0x53, 0x13, 0xe9, 0xc9, 0xd1, 0x33, 0x28, 0xa9, 0xf1, 0x54, 0xa3, 0x0d,
	0xe5, 0xae, 0x0e, 0x4d, 0x1c, 0x25, 0xb6, 0x75, 0x68, 0x3d, 0x2c, 0xca, 0x72, 0xb2, 0x18, 0xb1,
	0x0e, 0x15, 0x6f, 0x18, 0x9b, 0xae, 0x0e, 0x13, 0xbb, 0x90, 0xa2, 0x4a, 0xbc, 0x9c, 0x8f, 0x9e,
	0xc2, 0xf5, 0xf6, 0x70, 0x3e, 0x1b, 0xbf, 0xa7, 0xd9, 0xcc, 0xcc, 0x10, 0xa1, 0xe4, 0x98, 0x48,
	0xa7, 0x0e, 0xff, 0xc9, 0x52, 0x68, 0xa2, 0xd4, 0xb8, 0xad, 0x93, 0x64, 0x38, 0xd2, 0xe9, 0xf6,
	0x35, 0x59, 0x9e, 0x2e, 0xc6, 0xc6, 0x4b, 0xd8, 0x96, 0x3a, 0x34, 0xa3, 0x78, 0xfc, 0x51, 0xab,
	0x0f, 0x17, 0x1a, 0x77, 0x81, 0x49, 0x72, 0x02, 0x35, 0xe8, 0x50, 0xe0, 0x7a, 0x7d, 0x2e, 0xdc,
	0x26, 0xdb, 0xca, 0xa9, 0x7d, 0x3a, 0x75, 0x1d, 0x41, 0xcc, 0xc2, 0x2a, 0x6c, 0xaf, 0xd5, 0x16,
	0x77, 0x88, 0x15, 0x90, 0xc1, 0x8d, 0xb5, 0xc4, 0x85, 0x60, 0xc5, 0x86, 0x80, 0x8a, 0x1c, 0xc6,
	0xe7, 0xa9, 0xf9, 0x1e, 0x54, 0x25, 0xf7, 0xce, 0x16, 0xb8, 0x49, 0x2d, 0xde, 0x13, 0x8a, 0x6d,
	0xe5, 0xe5, 0xcc, 0x1e, 0xe1, 0x66, 0x26, 0x2f, 0xfc, 0x1b, 0x9f, 0x4b, 0x80, 0xeb, 0xc0, 0xad,
	0x77, 0x71, 0x38, 0x1f, 0x9b, 0x38, 0xc1, 0x1d, 0xb8, 0x25, 0xc9, 0x69, 0xf5, 0x3c, 0x67, 0x23,
	0x74, 0x1d, 0x6e, 0xaf, 0xc4, 0xa5, 0x69, 0xd0, 0x24, 0x45, 0x8e, 0x62, 0x11, 0xde, 0x81, 0x9d,
	0x15, 0x6b, 0xfb, 0xca, 0x97, 0x41, 0x57, 0x0d, 0x04, 0x31, 0x7d, 0x19, 0x38, 0xbe, 0xf0, 0x25,
	0x7b, 0x8d, 0x36, 0xec, 0xe6, 0x41, 0x9b, 0xcb, 0x33, 0x92, 0x6c, 0x74, 0x79, 0xa5, 0x23, 0xb8,
	0x22, 0xf6, 0x06, 0x6b, 0xb0, 0x97, 0x07, 0x2d, 0xe2, 0xaa, 0x27, 0x89, 0x8d, 0xf1, 0x00, 0x6a,
	0x79, 0xd4, 0x94, 0x6e, 0x9f, 0x64, 0x70, 0x42, 0x42, 0xb1, 0xb7, 0x78, 0x0f, 0xea, 0x57, 0xe2,
	0xce, 0xa9, 0xef, 0x11, 0x3b, 0xc7, 0xfb, 0xb0, 0xff, 0x77, 0xca, 0x4d, 0x83, 0x09, 0xda, 0x59,
	0xa6, 0x3f, 0x97, 0x5b, 0x15, 0xff, 0x6a, 0xe1, 0x7e, 0x76, 0x95, 0x94, 0x70, 0xe1, 0x3e, 0xf7,
	0xda, 0xe4, 0x29, 0xf6, 0xcd, 0xc2, 0x03, 0xb0, 0x73, 0xf0, 0x45, 0x8f, 0x0b, 0x57, 0x0d, 0x02,
	0xd1, 0x7f, 0xc4, 0xbe, 0xff, 0x0b, 0x3f, 0x66, 0x3f, 0x2c, 0xac, 0x65, 0x27, 0x4a, 0xf1, 0xaa,
	0xee, 0xcf, 0x2b, 0xbe, 0xaa, 0x94, 0x74, 0x4f, 0x7a, 0x8a, 0xd8, 0x2f, 0x0b, 0x1f, 0xc0, 0xdd,
	0x15, 0xec, 0x50, 0x93, 0xba, 0x4a, 0xba, 0xdc, 0xdb, 0x78, 0xf2, 0xa5, 0x80, 0x87, 0x59, 0x61,
	0xcf, 0xf7, 0x96, 0xa5, 0xb3, 0x17, 0x9f, 0x8a, 0xaf, 0xfe, 0x4f, 0xff, 0xaa, 0x27, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x0a, 0x41, 0xda, 0xab, 0x6a, 0x03, 0x00, 0x00,
}
