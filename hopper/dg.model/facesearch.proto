syntax = "proto3";

package dg.model;

import "searchcommon.proto";
import "face.proto";
import "common.proto";

enum AttrConds {
	Attr_Unknown = 0;
	Attr_Name = 1;
	Attr_IdNo = 2;
	Attr_GenderId = 3;
	Attr_AgeId = 4;
	Attr_NationId = 5;
	Attr_Address = 6;
	Attr_AgeRange = 7;
	Attr_IdType = 8;
}

message TimeSpacialRangeConds {
	repeated string SensorIds = 1;
	repeated QueryTimeRange TimeRanges = 2;
}

message BaseConds { 
	string QueryId = 1; // session id,

	repeated string Columns = 6;
	GroupByDimensions GroupByDimensions = 7;
	int32 Offset = 8;
	int32 Limit = 9;
	string SortBy = 10;
    bool SortOrderAsc = 11;
	DataFmtType OutputFmt = 12;
}

message CapturedConds {
	repeated string Ids = 1;
	TimeSpacialRangeConds TimeSpacialRangeConds = 2;
	map<string, string> Conditions = 3;
}

message RegisteredConds {
	repeated string Ids = 1;
	repeated string Repos = 2;
	map<string, string> Conditions = 3;
}

message WarnedConds {
	repeated string Ids = 1;
	repeated string Repos = 2;
	TimeSpacialRangeConds TimeSpacialRangeConds = 3;
	map<string, string> Conditions = 4;
}

message AuxiliaryConds {
	int32 IsWarned = 1;
	int32 IsChecked = 2;
	int32 IsRanked = 3;
	int32 Status = 4;
}

message ImageConds {
	repeated ImageResult Images = 1;
	float Confidence = 2;
	int32 CountLimit = 3; 
}

message CapturedFaceQuery {
	BaseConds BaseConds = 1;
	CapturedConds AttrConds = 2;
	ImageConds ImageConds = 3; // image * 4
	AuxiliaryConds AuxiliaryConds = 4;
}

message RegisteredFaceQuery {
	BaseConds BaseConds = 1;
	RegisteredConds AttrConds = 2;
	ImageConds ImageConds = 3; // image * 4
	AuxiliaryConds AuxiliaryConds = 4;
}

message FaceRuleQuery {
	BaseConds BaseConds = 1;
	string SensorName = 2;
	AuxiliaryConds AuxiliaryConds = 3;
}

message FaceEventQuery {
	BaseConds BaseConds = 1;
	WarnedConds AttrConds = 2;
	AuxiliaryConds AuxiliaryConds = 3;
}

